"""empty message

Revision ID: 39470d664a98
Revises: 
Create Date: 2019-09-28 16:45:31.255388

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '39470d664a98'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('review_status_kind',
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('revoked_token',
    sa.Column('jti', sa.String(length=120), nullable=False),
    sa.PrimaryKeyConstraint('jti')
    )
    op.create_table('user_permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('registered_user',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('oauth_openid', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['user_role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('oauth_openid')
    )
    op.create_table('user_role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['user_permission.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['user_role.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('prompt',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('content', sa.String(length=240), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['registered_user.id'], ),
    sa.ForeignKeyConstraint(['status'], ['review_status_kind.name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_login',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['registered_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('content', sa.String(length=1000), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('prompt_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['registered_user.id'], ),
    sa.ForeignKeyConstraint(['prompt_id'], ['prompt.id'], ),
    sa.ForeignKeyConstraint(['status'], ['review_status_kind.name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prompt_review',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('prompt_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('date_modified', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('comments', sa.String(length=400), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['registered_user.id'], ),
    sa.ForeignKeyConstraint(['prompt_id'], ['prompt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('post_review',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('post_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_created', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('date_modified', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_by', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('comments', sa.String(length=400), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['registered_user.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('post_review')
    op.drop_table('prompt_review')
    op.drop_table('post')
    op.drop_table('user_login')
    op.drop_table('prompt')
    op.drop_table('user_role_permission')
    op.drop_table('registered_user')
    op.drop_table('user_role')
    op.drop_table('user_permission')
    op.drop_table('revoked_token')
    op.drop_table('review_status_kind')
    # ### end Alembic commands ###
